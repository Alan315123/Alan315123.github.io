{"posts":[{"title":"ESXI SSH添加第三方网卡驱动","text":"驱动下载 点击 v-front.de 进入主页 页面下方选择List of currently available ESXi packages 选择对应驱动 在驱动详情页最下方下载vib驱动文件或offline Bundle离线包 开启SSH服务并登录 依次在ESXI主页点击操作→服务→启用Secure Shell(SSH) ESXI主页显示SSH已启用 通过SSH登录ESXI 驱动导入 将vib文件或OfflineBundle.zip放置到/tmp目录中（两种格式任选其一） 设置兼容Level：esxcli software acceptance set --level=CommunitySupported 方法一：vib格式导入 执行命令esxcli software vib install -v /tmp/net55-r8168.vib 方法二：offlinebundle.zip离线包导入 执行命令esxcli software vib install -d /tmp/net55-r8168.zip 方法三：在线下载驱动 执行命令esxcli software vib install -d https://vibsdepot.v-front.de -n net55-r8168 重启ESXI","link":"/post/990274a.html"},{"title":"ESXI设置硬盘RDM直通","text":"获取系统盘路径在ESXI后台中，依次点击储存→datastore1（系统盘），如图所示： 此处位置的值即为系统盘路径，复制该值备用 1/vmfs/volumes/63d91283-67d01208-f450-fc3fdb023927 获取被直通硬盘的硬盘标识符在ESXI后台中，依次点击储存→设备进入硬盘列表内，选择被直通硬盘 括号中内容即为硬盘标识符，复制该值备用 1t10.ATA_____HGST_HTS721010A9E630__________________________JR10004M23AVHF 开启SSH在ESXI后台中，依次点击管理→服务，选择SSH并右键点击启动 开启RDM直通 使用SSH登录ESXI 依次执行下列命令 进入系统盘目录cd 系统盘路径 创建store目录mkdir DMS.store 通过vmkfstools -z命令将被直通硬盘映射到数据存储指定虚拟磁盘文件中vmkfstools -z /vmfs/devices/disks/被直通硬盘标识符 /vmfs/volumes/ESXI系统盘路径/DMS.store/自定义名称.vmdk","link":"/post/a76b6e1b.html"},{"title":"Markdown+Test+Demo","text":"一级标题二级标题三级标题四级标题五级标题六级标题 一 XXX 1.1 XXX 1.1.1 XXX XXX 二 XXX 2.2 XXX 2.2.1 XXX XXX 三 XXX 3.3 XXX 3.3.1 XXX XXX 四 XXX 4.4 XXX 4.4.1 XXX XXX 选项1 选项2 选项3 字体加粗字体倾斜删除线==字体高亮==文字标注 代码块123@echo offecho This is a test demo!pause 引用内容 表头1 表头2 表头3 内容1 内容2 内容3 内容4 内容5 内容6","link":"/post/5cee3184.html"},{"title":"Proxmox VE 8.0安装配置流程","text":"简介PVE(Proxmox Virtual Environment)是一款开源的服务器虚拟化管理平台,基于 Debian Linux 构建,内核采用 KVM。它集成了可视化管理界面,方便用户通过 Web 管理虚拟机和 LXC 容器。PVE 提供了资源池、高可用、容器、存储等管理功能。用户可以灵活、高效地管理虚拟化基础设施。 安装准备1.下载 ISO 镜像点击链接https://www.proxmox.com/en/downloads前往官网进行下载 2.制作启动USB制作USB引导软件推荐俩款开源软件： balenaEtcher是一个免费开源软件，用于将镜像文件 .iso .img等文件 写入USB存储介质，使得U盘具备系统启动能力或者使用U盘来为计算机安装系统。它由Balena开发，并根据Apache License 2.0获得许可。 Ventoy新一代多系统启动U盘解决方案，简单来说Ventoy并不是.iso .img 等镜像文件的写入工具，而是一个微型的启动系统，你只需要把.iso .img 等镜像文件拷贝到安装过Ventoy的U盘中，你就能直接通过引导启动对应的镜像，只要你的U盘足够大。你可以同时存储不同系统的.iso 系统引导的时候，自由选择需要启动的镜像 系统安装开机→修改启动项→U盘启动→根据提示安装即可，不再赘述 系统配置换源 备份官方源 1mv /etc/apt/sources.list /etc/apt/sources.list.bak 使用清华源 123456nano /etc/apt/sources.listdeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmwaredeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmwaredeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmwaredeb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware 设置订阅源 123nano /etc/apt/sources.list.d/pve-no-subscription.listdeb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian/pve bookworm pve-no-subscription 屏蔽企业源 123nano /etc/apt/sources.list.d/pve-enterprise.list###deb https://enterprise.proxmox.com/debian/pve bookworm pve-enterprise 禁用ceph源 123nano /etc/apt/sources.list.d/ceph.list###deb https://enterprise.proxmox.com/debian/ceph-quincy bookworm enterprise 更新 1apt-get update NTP同步设置 查看当前时间1date -R chrony同步设置123456789nano /etc/chrony/chrony.conf# User customserver ntp.tencent.com iburstserver ntp1.tencent.com iburstserver ntp2.tencent.com iburstserver ntp3.tencent.com iburstserver ntp4.tencent.com iburstserver ntp5.tencent.com iburst 重启chrony服务1systemctl restart chronyd 检查日志以确认正在使用新配置的 NTP 服务器：123journalctl --since -1h -u chronydate -R","link":"/post/pve8.html"},{"title":"jsdelivr使用指南","text":"官网指路https://www.jsdelivr.com/ 项目简介 jsDelivr是一个免费、开源、不限带宽的CDN公共库，由Cloudflare、Fastly、StackPath、QUANTIL等CDN供应商提供了全球超过750个CDN节点，包括大陆数百个节点，可加速访问托管仓库内 [主要三种:NPM \\ WordPress \\ Github] 的静态资源，提升网站访问速度。 使用说明 先在github上创建一个公开仓库，存放好静态资源。仓库弄好后，点击Releases，选择Create/Draft a new release,填写好版本号比如0.0.2版，保存。然后就可以用jsDeliver访问了。 模版示例 https://cdn.jsdelivr.net/gh/用户名称/仓库名称@版本号/目录 如: https://cdn.jsdelivr.net/gh/JiangChuan1010/cdnstatic@0.0.2/img/test.jpg 注:版本号可以不填会默认引用最新版, 也可以把@版本号替换为@latest引用最新版, 但是都不推荐这样使用, 推荐的还是使用版本号","link":"/post/f1cbcb9.html"},{"title":"使用ACME获取证书","text":"下载安装acme.sh1curl https://get.acme.sh | sh ZeroSSL注册 访问账户注册页面注册一个ZeroSSL账户，传送门 获取账户的EAB凭证，用来注册acme帐户，传送门 ACME登录12345cd /root/.acme.sh./acme.sh --register-account --server zerossl \\ --eab-kid &lt;你的eab-kid&gt; \\ --eab-hmac-key &lt;你的eab-hmac-key&gt; Cloudflare环境变量配置123export CF_Token=&lt;你的CF_Token&gt; \\export CF_Account_ID=&lt;你的CF_Account_ID&gt; \\export CF_Zone_ID=&lt;你的Zone_ID&gt; 获取证书1acme.sh --issue --dns dns_cf -d &lt;domain&gt; -d *.&lt;domain&gt; 证书写入123cd /root/.acme.sh./acme.sh --install-cert -d &lt;域名&gt; --key-file /root/cert/&lt;域名&gt;.key --fullchain-file /root/cert/&lt;域名&gt;.crt 配置 acme.sh 自动更新和自动更新证书123cd /root/.acme.sh./acme.sh --upgrade --auto-upgrade","link":"/post/95793c38.html"},{"title":"使用Trojan配置科学上网","text":"购买域名以及获取证书 Trojan 工作原理是伪装成 HTTPS 流量来躲避 GFW 的检测，需要一个域名来获取证书.关于如何购买域名以及获取证书可以参考使用ACME获取证书这一篇文章. 配置 Trojan 首先需要下载 Trojan, 下载地址 配置服务端 Trojan 配置 &lt;private key file path&gt; 和 &lt;cert file path&gt; acme.sh 安装证书命令生成的两个文件路径.最后需要修改的是密码 &lt;password&gt;. trojan/config.json 文件配置123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051{ &quot;run_type&quot;: &quot;server&quot;, &quot;local_addr&quot;: &quot;0.0.0.0&quot;, &quot;local_port&quot;: 443, &quot;remote_addr&quot;: &quot;127.0.0.1&quot;, &quot;remote_port&quot;: 80, &quot;password&quot;: [ &quot;&lt;password&gt;&quot; ], &quot;log_level&quot;: 1, &quot;ssl&quot;: { &quot;cert&quot;: &quot;&lt;cert file path&gt;&quot;, &quot;key&quot;: &quot;&lt;private key file path&gt;&quot;, &quot;key_password&quot;: &quot;&quot;, &quot;cipher&quot;: &quot;ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384&quot;, &quot;cipher_tls13&quot;: &quot;TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384&quot;, &quot;prefer_server_cipher&quot;: true, &quot;alpn&quot;: [ &quot;http/1.1&quot; ], &quot;alpn_port_override&quot;: { &quot;h2&quot;: 81 }, &quot;reuse_session&quot;: true, &quot;session_ticket&quot;: false, &quot;session_timeout&quot;: 600, &quot;plain_http_response&quot;: &quot;&quot;, &quot;curves&quot;: &quot;&quot;, &quot;dhparam&quot;: &quot;&quot; }, &quot;tcp&quot;: { &quot;prefer_ipv4&quot;: false, &quot;no_delay&quot;: true, &quot;keep_alive&quot;: true, &quot;reuse_port&quot;: false, &quot;fast_open&quot;: false, &quot;fast_open_qlen&quot;: 20 }, &quot;mysql&quot;: { &quot;enabled&quot;: false, &quot;server_addr&quot;: &quot;127.0.0.1&quot;, &quot;server_port&quot;: 3306, &quot;database&quot;: &quot;trojan&quot;, &quot;username&quot;: &quot;trojan&quot;, &quot;password&quot;: &quot;&quot;, &quot;key&quot;: &quot;&quot;, &quot;cert&quot;: &quot;&quot;, &quot;ca&quot;: &quot;&quot; }} 添加一个 启动 Trojan 的配置文件 sudo vim /etc/systemd/system/trojan.service trojan.service 配置文件1234567891011121314[Unit]Description=trojanAfter=network.target[Service]Type=simplePIDFile=/root/trojan/trojan.pidExecStart=/root/trojan/trojan -c /root/trojan/config.json -l /root/trojan/trojan.logExecReload=/bin/kill -HUP \\$MAINPIDRestart=alwaysRestartSec=1s[Install]WantedBy=multi-user.target 启动 Trojansudo systemctl restart trojan 设置 Trojan 开机自启sudo systemctl enable trojan 查看下 Trojan 服务目前状态systemctl status trojan -l 因为申请的证书只有3个月有效期，所以每3个月都需要重启下 Trojan,不过我们可以使用 crontab 来定时任务来解决这个问题.sudo -u &lt;username&gt; crontab -e 添加一条定时任务 0 0 1 * * killall -s SIGUSR1 trojan. 配置 nginx 来防止恶意探测 安装 nginx sudo apt update &amp;&amp; sudo apt install -y nginx 这次我们并不需要修改 nginx的 /etc/nginx/nginx.conf 配置文件.首先我们执行 sudo rm -f /etc/nginx/sites-enabled/default &amp;&amp; sudo rm -f /etc/nginx/sites-available/default 执行 sudo vim /etc/nginx/sites-available/&lt;your domain&gt; 然后添加如下配置, &lt;your domain&gt; 替换成你购买的域名, &lt;any activity domain&gt; 随便写一个没有敏感信息的网站, &lt;yoru server ip 填入你服务器的 ip 地址.12345678910111213141516171819202122server { listen 127.0.0.1:80 default_server; server_name &lt;your domain&gt;; location / { proxy_pass &lt;any activity domain&gt;; }}server { listen 127.0.0.1:80; server_name &lt;yoru server ip&gt;; return 301 https://&lt;your domain&gt;$request_uri;}server { listen 0.0.0.0:80; listen [::]:80; server_name _; location / { return 301 https://$host$request_uri; }} sudo systemctl restart nginx &amp;&amp; sudo systemctl enable nginx &amp;&amp; sudo systemctl status nginx 重新启动下 nginx. 测试下访问我们的服务器. 这三种情况配置正确的情况都会被重定向到配置的 &lt;any activity domain&gt; 1.直接在浏览器输入 ip ; 2.https://{ip}; 3.{your domain} Clash客户端配置123456789101112# Trojan- name: &quot;Trojan&quot; type: trojan server: &lt;domain&gt; port: 443 password: &lt;password&gt; udp: true sni: &lt;domain&gt; # 填写伪装域名 alpn: - h2 - http/1.1 # skip-cert-verify: true","link":"/post/b29840f2.html"},{"title":"使用vCenter Image Builder制作ESXI镜像","text":"ESXi Image Builder简介ESXi Image Builder是什么？ESXi Image Builder是VMware vSphere平台中用于创建自定义ESXi镜像的工具。它允许管理员根据需要创建个性化ESXi映像，以满足特定的应用程序要求、安全要求和管理要求。 vSphere Image Builder是VMware vSphere中的一个组件。有了它，您可以创建ESXi映像，以满足基于特定需求的特定硬件和软件要求，除此之外，它还可以提供以下好处： 自定义镜像创建： 它允许您根据特定需求创建自定义ESXi镜像。这可以帮助您满足特定的硬件和软件要求，并优化系统性能和安全性。 自动化和批处理： 您可以使用它自动和批处理ESXi映像的创建和管理。这有助于优化效率并减少手动干预造成的错误。 可重复性： 使用它创建的映像可确保在vSphere环境中的一致部署。这有助于优化系统的稳定性和可维护性，并降低管理成本。 更新管理： 它可以帮助您管理ESXi映像的更新，包括安全补丁和新软件包的添加。这有助于确保系统的安全和更新。 多种部署选项： 您可以使用它创建多种部署选项，包括标准、自定义和扩展。这可以帮助您满足不同的业务需求，并优化系统灵活性。 准备工作离线包下载 下载ESXI离线包 下载驱动程序离线包 vCenter环境准备（6.0、7.0均可） 开启Auto Deploy服务 离线包导入 导入位置 查看导入离线包详情 ESXI镜像包预览 驱动包预览 新建自定义软件库此操作是为了放置后续的自定义镜像 自定义镜像制作 选择刚才导入的ESXI6.7U3离线镜像，点击克隆 克隆镜像名称，供应商，描述，存放的软件库设置 克隆镜像接受级别，软件包设置 克隆完成 自定义镜像存放于刚才新建的自定义软件库内 自定义镜像导出 镜像导出 导出任务完成后即可下载","link":"/post/b29840f1.html"}],"tags":[{"name":"ESXI","slug":"ESXI","link":"/tags/ESXI/"},{"name":"PVE","slug":"PVE","link":"/tags/PVE/"},{"name":"ACME","slug":"ACME","link":"/tags/ACME/"},{"name":"trojan","slug":"trojan","link":"/tags/trojan/"}],"categories":[{"name":"ESXI","slug":"ESXI","link":"/categories/ESXI/"},{"name":"Markdown","slug":"Markdown","link":"/categories/Markdown/"},{"name":"PVE","slug":"PVE","link":"/categories/PVE/"},{"name":"CDN","slug":"CDN","link":"/categories/CDN/"},{"name":"ACME","slug":"ACME","link":"/categories/ACME/"},{"name":"trojan","slug":"trojan","link":"/categories/trojan/"}],"pages":[{"title":"关于","text":"","link":"/about/index.html"},{"title":"标签","text":"","link":"/tags/index.html"},{"title":"分类","text":"","link":"/categories/index.html"}]}